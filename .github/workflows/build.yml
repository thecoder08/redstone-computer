name: Build program

on:
  [push, workflow_dispatch]

jobs:
  buildexe:
    name: Build executables
    runs-on: ubuntu-latest
    steps:
      - name: Get repository code
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm i

      - name: Install pkg
        run: npm i pkg -g

      - name: Build assembler
        run: pkg assembler/assembler.js -o rc-assembler -t node16-linux,node16-win,node16-macos

      - name: Build compiler
        run: pkg compiler/compiler.js -o rc-compiler -t node16-linux,node16-win,node16-macos

      - name: Build disassembler
        run: pkg disassembler/disassembler.js -o rc-disassembler -t node16-linux,node16-win,node16-macos

      - name: Build emulator
        run: pkg emulator/emulator.js -o rc-emulator -t node16-linux,node16-win,node16-macos

      - name: Build uploader
        run: pkg uploader/uploader.js -o rc-uploader -t node16-linux,node16-win,node16-macos

      - name: List files
        run: ls

      - name: Create Linux archive
        run: tar -czvf linux.tar.gz rc-assembler-linux rc-compiler-linux rc-disassembler-linux rc-emulator-linux rc-uploader-linux

      - name: Create Windows archive
        run: zip windows.zip rc-assembler-win.exe rc-compiler-win.exe rc-disassembler-win.exe rc-emulator-win.exe rc-uploader-win.exe

      - name: Create MacOS archive
        run: zip macos.zip rc-assembler-macos rc-compiler-macos rc-disassembler-macos rc-emulator-macos rc-uploader-macos

      - name: Upload Windows build
        uses: actions/upload-artifact@v2
        with:
          name: windows.zip
          path: windows.zip

      - name: Upload Linux build
        uses: actions/upload-artifact@v2
        with:
          name: linux.tar.gz
          path: linux.tar.gz

      - name: Upload MacOS build
        uses: actions/upload-artifact@v2
        with:
          name: macos.zip
          path: macos.zip
